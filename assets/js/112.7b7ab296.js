(window.webpackJsonp=window.webpackJsonp||[]).push([[112],{621:function(t,a,e){"use strict";e.r(a);var s=e(4),r=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"웹-서버-도메인-https-설정"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#웹-서버-도메인-https-설정"}},[t._v("#")]),t._v(" 웹 서버 도메인 & HTTPS 설정")]),t._v(" "),a("p",[t._v("이 문서는 api.leekyounghwa.com 도메인을 오라클 클라우드 인스턴스에 연결하고, Nginx 리버스 프록시 및 HTTPS를 적용하는 과정을 요약한 것입니다.")]),t._v(" "),a("h2",{attrs:{id:"_1단계-도메인-dns-설정-a-레코드"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1단계-도메인-dns-설정-a-레코드"}},[t._v("#")]),t._v(" 1단계: 도메인 DNS 설정 (A 레코드)")]),t._v(" "),a("p",[t._v("도메인을 구매한 사이트(가비아, GoDaddy 등)의 DNS 관리 페이지에서 아래와 같이 A 레코드를 설정합니다.")]),t._v(" "),a("p",[t._v("호스트(또는 이름): api")]),t._v(" "),a("p",[t._v("유형: A")]),t._v(" "),a("p",[t._v("값(IP 주소): 158.180.66.250 (오라클 클라우드 인스턴스의 공용 IP)")]),t._v(" "),a("h2",{attrs:{id:"_2단계-서버-방화벽-설정"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2단계-서버-방화벽-설정"}},[t._v("#")]),t._v(" 2단계: 서버 방화벽 설정")]),t._v(" "),a("p",[t._v("오라클 클라우드와 인스턴스 자체 방화벽에서 외부 접속을 허용합니다.")]),t._v(" "),a("p",[t._v("2-1. 오라클 클라우드 방화벽 (Security List)\n80번 포트 (HTTP):")]),t._v(" "),a("p",[t._v("소스 CIDR: 0.0.0.0/0")]),t._v(" "),a("p",[t._v("IP 프로토콜: TCP")]),t._v(" "),a("p",[t._v("대상 포트 범위: 80")]),t._v(" "),a("p",[t._v("443번 포트 (HTTPS):")]),t._v(" "),a("p",[t._v("소스 CIDR: 0.0.0.0/0")]),t._v(" "),a("p",[t._v("IP 프로토콜: TCP")]),t._v(" "),a("p",[t._v("대상 포트 범위: 443")]),t._v(" "),a("p",[t._v("2-2. 인스턴스 내부 방화벽 (FirewallD)\n이전에 설정했던 포트 포워딩 규칙을 제거하고, 방화벽을 재설정합니다.")]),t._v(" "),a("p",[t._v("Bash")]),t._v(" "),a("h3",{attrs:{id:"firewalld-서비스가-실행-중인지-확인하고-실행-중이-아니라면-시작"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#firewalld-서비스가-실행-중인지-확인하고-실행-중이-아니라면-시작"}},[t._v("#")]),t._v(" FirewallD 서비스가 실행 중인지 확인하고, 실행 중이 아니라면 시작")]),t._v(" "),a("p",[t._v("sudo systemctl status firewalld\nsudo systemctl start firewalld\nsudo systemctl enable firewalld")]),t._v(" "),a("h3",{attrs:{id:"기존-포트-포워딩-규칙-제거-80-8787"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#기존-포트-포워딩-규칙-제거-80-8787"}},[t._v("#")]),t._v(" 기존 포트 포워딩 규칙 제거 (80 -> 8787)")]),t._v(" "),a("p",[t._v("sudo firewall-cmd --zone=public --remove-forward-port=port=80:proto=tcp:toport=8787 --permanent")]),t._v(" "),a("h3",{attrs:{id:"방화벽-설정-다시-불러오기"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#방화벽-설정-다시-불러오기"}},[t._v("#")]),t._v(" 방화벽 설정 다시 불러오기")]),t._v(" "),a("p",[t._v("sudo firewall-cmd --reload\n3단계: Nginx 설치 및 리버스 프록시 설정\nSSH로 인스턴스에 접속하여 Nginx를 설치하고, 80번 포트로 들어온 요청을 8080 포트로 전달하도록 설정합니다.")]),t._v(" "),a("p",[t._v("Bash")]),t._v(" "),a("h3",{attrs:{id:"nginx-설치"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nginx-설치"}},[t._v("#")]),t._v(" Nginx 설치")]),t._v(" "),a("p",[t._v("sudo apt update\nsudo apt install nginx")]),t._v(" "),a("h3",{attrs:{id:"nginx-설정-파일-생성-및-편집"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nginx-설정-파일-생성-및-편집"}},[t._v("#")]),t._v(" Nginx 설정 파일 생성 및 편집")]),t._v(" "),a("p",[t._v("sudo nano /etc/nginx/sites-available/api.leekyounghwa.com\n파일에 아래 내용 붙여넣기 (Ctrl + X, Y, Enter로 저장)")]),t._v(" "),a("p",[t._v("Nginx")]),t._v(" "),a("p",[t._v("server {\nlisten 80;\nlisten [::]:80;\nserver_name api.leekyounghwa.com www.api.leekyounghwa.com;")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("location / {\n    proxy_pass http://localhost:8080;\n    proxy_set_header Host $host;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header X-Forwarded-Proto $scheme;\n}\n")])])]),a("p",[t._v("}\nBash")]),t._v(" "),a("h3",{attrs:{id:"설정-파일-활성화-및-nginx-재시작"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#설정-파일-활성화-및-nginx-재시작"}},[t._v("#")]),t._v(" 설정 파일 활성화 및 Nginx 재시작")]),t._v(" "),a("p",[t._v("sudo ln -s /etc/nginx/sites-available/api.leekyounghwa.com /etc/nginx/sites-enabled/\nsudo unlink /etc/nginx/sites-enabled/default\nsudo nginx -t\nsudo systemctl restart nginx\n4단계: HTTPS(SSL) 적용\nCertbot을 사용해 무료 SSL 인증서를 발급받고 HTTPS를 적용합니다.")]),t._v(" "),a("p",[t._v("Bash")]),t._v(" "),a("h3",{attrs:{id:"certbot-설치"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#certbot-설치"}},[t._v("#")]),t._v(" Certbot 설치")]),t._v(" "),a("p",[t._v("sudo apt install certbot python3-certbot-nginx")]),t._v(" "),a("h3",{attrs:{id:"certbot-실행-자동으로-nginx-설정-변경-및-재시작"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#certbot-실행-자동으로-nginx-설정-변경-및-재시작"}},[t._v("#")]),t._v(" Certbot 실행 (자동으로 Nginx 설정 변경 및 재시작)")]),t._v(" "),a("p",[t._v("sudo certbot --nginx -d api.leekyounghwa.com\n이메일 주소 입력")]),t._v(" "),a("p",[t._v("약관 동의")]),t._v(" "),a("p",[t._v("HTTPS 리디렉션 옵션 선택 (보통 2: Redirect 선택)")]),t._v(" "),a("h2",{attrs:{id:"최종-확인"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#최종-확인"}},[t._v("#")]),t._v(" 최종 확인")]),t._v(" "),a("p",[t._v("모든 과정이 완료되면, 이제 포트 번호 없이 https://api.leekyounghwa.com/swagger-ui/index.html로 접속할 수 있습니다. http로 접속해도 https로 자동 리디렉션됩니다.")])])}),[],!1,null,null,null);a.default=r.exports}}]);